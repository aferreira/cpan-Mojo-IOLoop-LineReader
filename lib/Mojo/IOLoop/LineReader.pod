
# PODNAME: Mojo::IOLoop::LineReader

=encoding utf8

=head1 NAME

Mojo::IOLoop::LineReader - Non-blocking line-oriented input stream

=head1 SYNOPSIS

  use Mojo::IOLoop::LineReader;

  # Create reader
  my $reader = Mojo::IOLoop::LineReader->new($handle);
  $reader->on(readln => sub {
    my ($reader, $line) = @_;
    ...
  });
  $reader->on(close => sub {
    my $reader = shift;
    ...
  });
  $reader->on(error => sub {
    my ($reader, $err) = @_;
    ...
  });

  # Start and stop watching for new data
  $reader->start;
  $reader->stop;

  # Start reactor if necessary
  $reader->reactor->start unless $reader->reactor->is_running;

=head1 DESCRIPTION

L<Mojo::IOLoop::LineReader> is a subclass of L<Mojo::IOLoop::Stream>
that implements reading from a handle line by line.

=head1 EVENTS

L<Mojo::IOLoop::LineReader> inherits all events from L<Mojo::IOLoop::Stream> and can
emit the following new ones.

=head2 readln
 
  $reader->on(readln => sub {
    my ($reader, $line) = @_;
    ...
  });
 
When data arrives on the stream, it is broken
down into lines. This event is emitted for each such line.

=head1 ATTRIBUTES

L<Mojo::IOLoop::LineReader> inherits all attributes
from L<Mojo::IOLoop::Stream> and implements the following new ones.

=head2 input_record_separator

  my $rs = $reader->input_record_separator;
  $reader = $reader->input_record_separator("");

Line separator to use when breaking input to lines, defaults
to the value of C<$/> at construction time.

=head1 METHODS

L<Mojo::IOLoop::LineReader> inherits all methods from L<Mojo::IOLoop::Stream> and
implements the following new ones.

=head2 new
 
  my $reader = Mojo::IOLoop::LineReader->new($handle);
 
Construct a new L<Mojo::IOLoop::LineReader> object
and subscribe to L<Mojo::IOLoop::Stream/"read"> and L<Mojo::IOLoop::Stream/"close"> events
with special handlers.
 
=head1 SEE ALSO

L<Mojo::IOLoop::Stream>, L<MojoX::LineStream>.

=head1 ACKNOWLEDGEMENTS

Jan Henning Thorsen and Joel Berger for advice and code on #mojo.

The development of this library has been partially sponsored by Connectivity, Inc.

=cut
